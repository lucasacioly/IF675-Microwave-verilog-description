$date
	Sun Dec 19 03:55:30 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module decB2SSD_tb $end
$var wire 7 ! smin_tb [6:0] $end
$var wire 7 " ssec_ones_tb [6:0] $end
$var wire 7 # ssec_tens_tb [6:0] $end
$var reg 4 $ bmin_tb [3:0] $end
$var reg 4 % bsec_ones_tb [3:0] $end
$var reg 4 & bsec_tens_tb [3:0] $end
$var integer 32 ' i [31:0] $end
$scope module uut $end
$var wire 4 ( bmin [3:0] $end
$var wire 4 ) bsec_ones [3:0] $end
$var wire 4 * bsec_tens [3:0] $end
$var reg 7 + smin [6:0] $end
$var reg 7 , ssec_ones [6:0] $end
$var reg 7 - ssec_tens [6:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 -
b0 ,
b0 +
b0 *
b0 )
b0 (
b0 '
b0 &
b0 %
b0 $
b0 #
b0 "
b0 !
$end
#10
b110000 -
b110000 #
b110000 ,
b110000 "
b110000 +
b110000 !
b1 $
b1 (
b1 &
b1 *
b1 %
b1 )
b1 '
#20
b1101101 -
b1101101 #
b1101101 ,
b1101101 "
b1101101 +
b1101101 !
b10 $
b10 (
b10 &
b10 *
b10 %
b10 )
b10 '
#30
b1111001 -
b1111001 #
b1111001 ,
b1111001 "
b1111001 +
b1111001 !
b11 $
b11 (
b11 &
b11 *
b11 %
b11 )
b11 '
#40
b110011 -
b110011 #
b110011 ,
b110011 "
b110011 +
b110011 !
b100 $
b100 (
b100 &
b100 *
b100 %
b100 )
b100 '
#50
b1011011 -
b1011011 #
b1011011 ,
b1011011 "
b1011011 +
b1011011 !
b101 $
b101 (
b101 &
b101 *
b101 %
b101 )
b101 '
#60
b11111 -
b11111 #
b11111 ,
b11111 "
b11111 +
b11111 !
b110 $
b110 (
b110 &
b110 *
b110 %
b110 )
b110 '
#70
b1110000 -
b1110000 #
b1110000 ,
b1110000 "
b1110000 +
b1110000 !
b111 $
b111 (
b111 &
b111 *
b111 %
b111 )
b111 '
#80
b1111111 -
b1111111 #
b1111111 ,
b1111111 "
b1111111 +
b1111111 !
b1000 $
b1000 (
b1000 &
b1000 *
b1000 %
b1000 )
b1000 '
#90
b1110011 -
b1110011 #
b1110011 ,
b1110011 "
b1110011 +
b1110011 !
b1001 $
b1001 (
b1001 &
b1001 *
b1001 %
b1001 )
b1001 '
#100
b0 -
b0 #
b0 ,
b0 "
b0 +
b0 !
b1010 $
b1010 (
b1010 &
b1010 *
b1010 %
b1010 )
b1010 '
#110
b1011 $
b1011 (
b1011 &
b1011 *
b1011 %
b1011 )
b1011 '
#120
b1100 '
#130
b1011011 -
b1011011 #
b1111110 ,
b1111110 "
b1101101 +
b1101101 !
b0 %
b0 )
b101 &
b101 *
b10 $
b10 (
#140
b1111110 -
b1111110 #
b110000 +
b110000 !
b0 &
b0 *
b1 $
b1 (
#150
b11111 ,
b11111 "
b110 %
b110 )
#160
b1111001 -
b1111001 #
b1111110 ,
b1111110 "
b0 +
b0 !
b0 %
b0 )
b11 &
b11 *
b0 $
b0 (
#170
b0 -
b0 #
b1110000 ,
b1110000 "
b111 %
b111 )
b0 &
b0 *
#180
b0 -
b0 #
b0 ,
b0 "
b0 %
b0 )
#190
